#!/bin/bash
#
# first argument: email address
# second argument: the attribute for the keyring (values are client-id
# client-secret, refresh, token and token-expire)
#
# using secret-tool to get the secrets stored in keyring
# using oauth2 cript from google-oauth2-tools
# (https://github.com/google/gmail-oauth2-tools/blob/master/python/oauth2.py) to
# connect to google and obtain the oauth2 token
#
# client-secret, client-id and refresh should be already in the keyring, you
# must do the first step from the comments in the oauth2.py script before using
# this script and use secret-tool to store the attributes. You have to do that
# only one time. After that you can use this script to get a valid token. New
# tokens are requested if the stored token have expired.
#
# Note: the last step commented in the gmail-oauth2-tools script is not
# necesary, as far as I could see it encodes the account and the token in one
# base64 encoded string, i.e. this command recovers the token from that base64
# string:
# oauth2.py --generate_oauth2_string --user=$account \
#	--access_token=${access_token} | awk 'NR==2' | base64 -d | awk '{print $2}'
#
# Author: Christian Tenllado
# https://github.com/tenllado/dotfiles/blob/master/config/msmtp/oauth2token

# 2020-12-06 LL
# Modified using plain files for store

account=$1
att=$2

store="{{ application.path }}/msmtp/store/$att"

mkdir -p $store
chmod "u=rwx,g=,o=" $store

get_access_token() {
	{ IFS= read -r tokenline && IFS= read -r expireline; } < \
	<(./oauth2.py --user=$account \
	--client_id=$(cat $store/client-id.txt) \
	--client_secret=$(cat $store/client-secret.txt) \
	--refresh_token=$(cat $store/refresh.txt))

	token=${tokenline#Access Token: }
	expire=${expireline#Access Token Expiration Seconds: }
}

token="$(cat "$store/token.txt")"
expire="$(cat "$store/token-expire.txt")"
now=$(date +%s)

if [[ $token && $expire && $now -lt $((expire - 60)) ]]; then
	echo $token
else
	get_access_token
	echo $token > $store/token.txt
	expire=$((now + expire))
	echo $expire > $store/token-expire.txt
	echo $token
fi
