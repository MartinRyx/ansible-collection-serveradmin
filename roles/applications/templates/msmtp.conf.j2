#
# Managed by Ansible!!!
#

# Example for a user configuration file ~/.msmtprc
#
# This file focusses on TLS and authentication. Features not used here include
# logging, timeouts, SOCKS proxies, TLS parameters, Delivery Status Notification
# (DSN) settings, and more.


# Set default values for all following accounts.
defaults

host {{ application.sendmail.host | d('smtp.gmail.com') }}
port {{ application.sendmail.port | d('587') }}
tls on
protocol smtp


# Set a list of trusted CAs for TLS. You can use a system-wide default file,
# as in this example, or download the root certificate of your CA and use that.
tls_trust_file /etc/ssl/certs/ca-bundle.trust.crt

# Additionally, you should use the tls_crl_file command to check for revoked
# certificates, but unfortunately getting revocation lists and keeping them
# up to date is not straightforward.
#tls_crl_file ~/.tls-crls

# Log what we do
syslog on



# 2020-12-06 LL
# Settings form:
# https://github.com/tenllado/dotfiles/tree/master/config/msmtp

account {{ application.sendmail.account }}
from {{ application.sendmail.from }}
auth oauthbearer
user {{ application.sendmail.user }}
passwordeval {{ application.path }}/msmtp_oauth2token.sh {{ application.sendmail.user }} {{ application.sendmail.account }}

# Password method 1: Add the password to the system keyring, and let msmtp get
# it automatically. To set the keyring password using Gnome's libsecret:
# $ secret-tool store --label=msmtp \
#   host smtp.freemail.example \
#   service smtp \
#   user joe.smith

# Password method 2: Store the password in an encrypted file, and tell msmtp
# which command to use to decrypt it. This is usually used with GnuPG, as in
# this example. Usually gpg-agent will ask once for the decryption password.
#passwordeval gpg2 --no-tty -q -d ~/.msmtp-password.gpg

# Password method 3: Store the password directly in this file. Usually it is not
# a good idea to store passwords in plain text files. If you do it anyway, at
# least make sure that this file can only be read by yourself.
#password secret123

# Password method 4: Store the password in ~/.netrc. This method is probably not
# relevant anymore.

# Password method 5: Do not specify a password. Msmtp will then prompt you for
# it. This means you need to be able to type into a terminal when msmtp runs.


# Set a default account
account default : {{ sendmail.account }}






#### To activate ########################################333
# 1. Create a project at: https://console.developers.google.com/
# 2. Run:
#    ./oauth2.py --user={{ application.sendmail.user }} --client_id=<the client-id> --client_secret=<the client-secret> --generate_oauth2_token
# 3. Run:
#    secret-tool store --label=msmtp-oauth2 {{ application.sendmail.account }} client-id
#    secret-tool store --label=msmtp-oauth2 {{ application.sendmail.account }} client-secret
#    secret-tool store --label=msmtp-oauth2 {{ application.sendmail.account }} refresh
