---

- name: "Skapa /version/deploy.repo"
  become: yes
  file:
    path: "{{ application.path }}/versions/{{ deploy.repo | mandatory }}"
    state: directory
    owner: "{{ application.process_user }}"
    group: "{{ application.process_group }}"
    mode: "u=rwx,g=rx,o=rx"
  when: not applications_devmode

- name: "Uppdatera deploy_facts med [deploy.repo].source" 
  set_fact:
    deploy_facts: >-
      {{- deploy_facts | combine({
        deploy.repo: {
            'source': application.path+'/versions/'+deploy.repo+'/'+deploy_facts[deploy.repo].version
          }
        }
        , recursive=True) -}}
  when: not applications_devmode

- name: "Update deploy_facts with [deploy.repo].source for devmode" 
  set_fact:
    deploy_facts: >-
      {{- deploy_facts | combine({
        deploy.repo: {
            'source': deploy_facts[deploy.repo].source~'/'~deploy.folder_to_copy
          }
        }
        , recursive=True) -}}
  when: applications_devmode

#- debug:
#    var: deploy_facts
#- pause:

#setype: httpd_sys_rw_content_t om nginx ska skriva...

- debug:
    msg:
      shell: >-
        rsync -a --delete
        {%- if deploy.exclude_list_file is defined -%}
        {{' '}}--exclude-from "{{ deploy.exclude_list_file }}"
        {%- endif -%}
        {{' '}}"{{ deploy.folder_to_copy }}/" "{{ deploy_facts[deploy.repo].source }}"
      chdir: "{{ deploy_facts[deploy.repo].path }}"

- name: "Kopiera filer till /versions"
  become: yes
  become_user: "{{ application.process_user }}"
  # Don't use cp, rsync is easier with exclude-list
  #cp -r 'web'/ "${DEPLOY_PATH}_${DEPLOY_TAG}"
  
  #rsync:
  #-a, --archive               archive mode; equals -rlptgoD (no -H,-A,-X)
  #  -r, --recursive             recurse into directories
  #  -l, --links                 copy symlinks as symlinks
  #  -p, --perms                 preserve permissions
  #  -t, --times                 preserve modification times
  #  -g, --group                 preserve group
  #  -o, --owner                 preserve owner (super-user only)
  #  -D                          same as --devices --specials
  #    --devices               preserve device files (super-user only)
  #    --specials              preserve special files
  
  #  -H, --hard-links     This tells rsync to look for hard-linked files in the transfer and link together the corresponding files on the receiving side. Without this option, hard-linked files in the transfer are treated as though they were separate files.
  #  -A, --acls           This option causes rsync to update the destination ACLs to be the same as the source ACLs. The option also implies --perms.
  #  -X, --xattrs         This option causes rsync to update the remote extended attributes to be the same as the local ones.
  
  #-v, --verbose
  #-z, --compress              compress file data during the transfer
  shell: >-
    rsync -a --delete
    {%- if deploy.exclude_list_file is defined -%}
    {{' '}}--exclude-from "{{ deploy.exclude_list_file }}"
    {%- endif -%}
    {{' '}}"{{ deploy.folder_to_copy }}/" "{{ deploy_facts[deploy.repo].source }}"
  args:
    chdir: "{{ deploy_facts[deploy.repo].path }}"
  when: not applications_devmode
