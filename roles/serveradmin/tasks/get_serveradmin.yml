---
#- include_role:
#    name: serveradmin
#    tasks_from: get_serveradmin
#
# Returns: serveradmin

- include_role:
    name: git
    tasks_from: get_repo_url
  vars:
    repo: "{{ serveradmin.repo }}"
  tags:
    - bootstrap

- name: Lista filer
  set_fact:
    serveradmin_files:
      - { file: splash.sh,    dest: "", desc: "Visa denna meny", mode: "u=rwx,g=rx,o=rx", bootstrap: true }
      - { file: autostart.sh, path: "/etc/profile.d", owner: root, group: root, mode: "u=rwx,g=rx,o=rx", bootstrap: true  }
      - { file: pull_devops, dest: "pull_devops", prefix: "", bootstrap: true }
      - { file: list_certs, desc: "Lista använda certifikat med utgångsdatum."}
      - { file: cert_warning.sh, prefix: ""}
      - { file: ansiblerunner_helper.sh, prefix: "", bootstrap: true }
      - { file: include_common.sh, prefix: "", mode: "u=rwx,g=rx,o=rx", bootstrap: true  }
      - file: ansiblerunner.sh
        dest: "ansible_facts_show"
        #desc: "Visa ansible-information om denna server."
        meta:
          playbook_in_serveradmin_collection: true
          ansible_playbook: "facts_show.yml"
        bootstrap: true
      - file: ansiblerunner.sh
        dest: "ansible_serveradmin"
        desc: "Kör playbooken 'serveradmin' lokalt på denna server."
        meta:
          playbook_in_serveradmin_collection: false
          ansible_playbook: "playbook-serveradmin.yml"
        bootstrap: true
      - file: ansiblerunner.sh
        dest: "ansible_applications"
        desc: "Konfigurera alla applikationer lokalt på denna server."
        meta:
          playbook_in_serveradmin_collection: true
          ansible_playbook: "applications.yml"
      - file: ansiblerunner.sh
        dest: "ansible_backup"
        desc: "Konfigurera säkerhetskopiering från denna server till andra."
        meta:
          playbook_in_serveradmin_collection: true
          ansible_playbook: "backup.yml"
          agent_forwarding: true
        when: "{{ backup is defined }}"
      - file: ansiblerunner.sh
        dest: "deploy"
        desc: "Driftsättning av applikation."
        meta:
          playbook_in_serveradmin_collection: true
          ansible_playbook: "applications_deploy.yml"
  tags:
    - bootstrap

- name: Lista filer (databaskopiering)
  set_fact:
    serveradmin_files: |-
      {%- for database_migration in serveradmin.database_migrations | default([]) -%}
      {{-   serveradmin_files.append({
        'file': 'database_migration.sh',
        'dest': 'copy_db_'+database_migration.from_database,
        'desc': 'Kopiera databasen '+database_migration.from_database+' från '+database_migration.from_server+' till '+database_migration.to_database,
        'meta': database_migration,
        'show_on_splash': database_migration.show_on_splash | default(true) }) -}}
      {%- endfor -%}
      {{- serveradmin_files -}}

- name: "Filtrera alternativ för bootstrap"
  set_fact:
    serveradmin_files: "{{ serveradmin_files | selectattr('bootstrap', 'defined') | selectattr('bootstrap') | list }}"
  tags:
    - never
    - bootstrap

- name: Kombinera default-värden och host-värden
  set_fact:
    serveradmin: >-
      {%- set output = serveradmin_default | combine(serveradmin, recursive=True) -%}
      {%- set output = output | combine({
        'repo': repo_return,
        'files': serveradmin_files
      }) -%}
      {%- for item in output.files -%}
      {{-   item.__setitem__('target', item.prefix | default(organisation.command_prefix) + item.dest | default(item.file)) -}}
      {%- endfor -%}
      {{- output -}}
  tags:
    - bootstrap
