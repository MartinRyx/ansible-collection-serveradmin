---
#- include_role:
#    name: serveradmin
#    tasks_from: get_serveradmin
#
# Returns: serveradmin

- include_role:
    name: git
    tasks_from: get_repo_url
  vars:
    repo: "{{ serveradmin.repo|mandatory }}"
  tags:
    - bootstrap

- name: Lista filer
  set_fact:
    serveradmin_files:
      - file: pull_serveradmin_repo
      - file: splash.sh
        dest: ""
        desc: "Visa denna meny"
        mode: "u=rwx,g=rx,o=rx"
      - file: autostart.sh
        path: "/etc/profile.d"
        owner: root
        group: root
        mode: "u=rwx,g=rx,o=rx"
      - file: list_certs
        desc: "Lista använda certifikat med utgångsdatum."
        when: "{{ 'bootstrap' not in ansible_run_tags }}"
      - file: cert_warning.sh
        prefix: ""
        when: "{{ 'bootstrap' not in ansible_run_tags }}"
      - file: ansiblerunner_helper.sh
        prefix: ""
      - file: include_common.sh
        prefix: ""
        mode: "u=rwx,g=rx,o=rx"
      - file: ansiblerunner.sh
        dest: "ansible_facts_show"
        #desc: "Visa ansible-information om denna server."
        meta:
          ansible_playbook: "playbook-facts_show.yml"
      - file: ansiblerunner.sh
        dest: "ansible_serveradmin"
        desc: "Konfigurerar denna server, utan applikationer."
        meta:
          ansible_playbook: "playbook-serveradmin.yml"
      - file: ansiblerunner.sh
        dest: "ansible_applications"
        desc: "Konfigurera alla applikationer lokalt på denna server."
        meta:
          ansible_playbook: "playbook-applications.yml"
        when: "{{ 'bootstrap' not in ansible_run_tags }}"
      - file: ansiblerunner.sh
        dest: "ansible_backup"
        desc: "Konfigurera säkerhetskopiering från denna server till andra."
        meta:
          ansible_playbook: "playbook-backup.yml"
          agent_forwarding: true
        when: "{{ backup is defined }}"
      - file: ansiblerunner.sh
        dest: "deploy"
        desc: "Driftsättning av applikation."
        meta:
          ansible_playbook: "playbook-applications_deploy.yml"
        when: "{{ 'bootstrap' not in ansible_run_tags and not applications_devmode }}"
  tags:
    - bootstrap

- name: Generate data_migrations
  set_fact:
    serveradmin_files: |-
      {%- for data_migration in data_migrations | default([]) -%}
      {{-   serveradmin_files.append({
        'file': 'data_migration.sh',
        'dest': 'data_migration_'+data_migration.name,
        'desc': 'Kopiera data'~((' från '~data_migration.ssh_host) if data_migration.ssh_host is defined else ''),
        'meta': data_migration,
        'show_on_splash': data_migration.show_on_splash | default(true) }) -}}
      {%- endfor -%}
      {{- serveradmin_files -}}

# 2020-08-29 LL Ersatt av serveradmin_files[].when
#- name: "Filtrera alternativ för bootstrap"
#  set_fact:
#    serveradmin_files: "{{ serveradmin_files | selectattr('bootstrap', 'defined') | selectattr('bootstrap') | list }}"
#  tags:
#    - never
#    - bootstrap

- name: Kombinera default-värden och host-värden
  set_fact:
    serveradmin: >-
      {%- set output = serveradmin_default | combine(serveradmin, recursive=True) -%}
      {%- set output = output | combine({
        'repo': repo_return,
        'files': serveradmin_files
      }) -%}
      {%- for item in output.files -%}
      {{-   item.__setitem__('target', item.prefix | default(organisation.command_prefix) + item.dest | default(item.file)) -}}
      {%- endfor -%}
      {{- output -}}
  tags:
    - bootstrap
