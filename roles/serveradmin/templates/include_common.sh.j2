#!/bin/bash
#
# Managed by Ansible!
#

# Reset
NC='\e[0m'       # No color

# Regular Colors
Black='\e[0;30m'        # Black
Red='\e[0;31m'          # Red
Green='\e[0;32m'        # Green
Yellow='\e[0;33m'       # Yellow
Blue='\e[0;34m'         # Blue
Purple='\e[0;35m'       # Purple
Cyan='\e[0;36m'         # Cyan
White='\e[0;37m'        # White

# Bold
BBlack='\e[1;30m'       # Black
BRed='\e[1;31m'         # Red
BGreen='\e[1;32m'       # Green
BYellow='\e[1;33m'      # Yellow
BBlue='\e[1;34m'        # Blue
BPurple='\e[1;35m'      # Purple
BCyan='\e[1;36m'        # Cyan
BWhite='\e[1;37m'       # White

# Underline
UBlack='\e[4;30m'       # Black
URed='\e[4;31m'         # Red
UGreen='\e[4;32m'       # Green
UYellow='\e[4;33m'      # Yellow
UBlue='\e[4;34m'        # Blue
UPurple='\e[4;35m'      # Purple
UCyan='\e[4;36m'        # Cyan
UWhite='\e[4;37m'       # White

# Background
On_Black='\e[40m'       # Black
On_Red='\e[41m'         # Red
On_Green='\e[42m'       # Green
On_Yellow='\e[43m'      # Yellow
On_Blue='\e[44m'        # Blue
On_Purple='\e[45m'      # Purple
On_Cyan='\e[46m'        # Cyan
On_White='\e[47m'       # White

# High Intensity
IBlack='\e[0;90m'       # Black
IRed='\e[0;91m'         # Red
IGreen='\e[0;92m'       # Green
IYellow='\e[0;93m'      # Yellow
IBlue='\e[0;94m'        # Blue
IPurple='\e[0;95m'      # Purple
ICyan='\e[0;96m'        # Cyan
IWhite='\e[0;97m'       # White

# Bold High Intensity
BIBlack='\e[1;90m'      # Black
BIRed='\e[1;91m'        # Red
BIGreen='\e[1;92m'      # Green
BIYellow='\e[1;93m'     # Yellow
BIBlue='\e[1;94m'       # Blue
BIPurple='\e[1;95m'     # Purple
BICyan='\e[1;96m'       # Cyan
BIWhite='\e[1;97m'      # White

# High Intensity backgrounds
On_IBlack='\e[0;100m'   # Black
On_IRed='\e[0;101m'     # Red
On_IGreen='\e[0;102m'   # Green
On_IYellow='\e[0;103m'  # Yellow
On_IBlue='\e[0;104m'    # Blue
On_IPurple='\e[0;105m'  # Purple
On_ICyan='\e[0;106m'    # Cyan
On_IWhite='\e[0;107m'   # White

# AnvÃ¤ndning:
# echo -e "I ${RED}love${NC} Stack Overflow"


INCLUDE_DEVMODE_PATH="{{ serveradmin.path }}/include_devmode.sh"
test -f "$INCLUDE_DEVMODE_PATH" && source "$INCLUDE_DEVMODE_PATH"


{% raw %}
function menu {
	
	# $1: Name of array with choices + [@]: DEPLOY_ENVIRONMENTS[@], VALID_DEPLOY_ENVIRONMENTS[@], ...
	# $2: Menu text
	# $3: Name of variable for return value
# declare -a argAry1=("${!1}")
#    echo "${argAry1[@]}"
#exit
	declare -a MENU_CHOICES=("${!1}")
#	echo ${MENU_CHOICES[@]}
#	echo "${#MENU_CHOICES[@]}"
#exit
	if [ ${#MENU_CHOICES[@]} -eq 0 ]; then
		echo -e "\e[31m\e[1mNo valid choices for menu.\e[0m"
		exit
	fi

	echo -e "\e[93m$2\e[0m"

	select MENU_CHOICE in "${MENU_CHOICES[@]}"; do
		[[ -n $MENU_CHOICE ]] || { echo "Invalid choice. Please try again." >&2; continue; }
	break # valid choice was made; exit prompt.
	done

	local  __resultvar=$3
	#local  myresult='some value'
	eval $__resultvar="'$MENU_CHOICE'"
}
{% endraw %}