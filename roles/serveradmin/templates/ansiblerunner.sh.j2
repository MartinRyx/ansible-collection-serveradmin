#!/bin/bash
#
# Managed by Ansible!
#
{% set agent_forwarding = item.meta.agent_forwarding | default(false) %}
# Se till att devops-repot alltid är uppdaterat:
{{ organisation.command_prefix }}pull_serveradmin_repo

{% if not agent_forwarding %}
# Exit on error:
set -e
{% endif %}
source include_common.sh


# If playbook doesn't exist in root of serveradmin-repo,
# Create a playbook that include the playbook from ansible-collection-serveradmin
if [ -f "{{ serveradmin.path }}/repos/serveradmin/{{ item.meta.ansible_playbook }}" ]; then
  PLAYBOOK_TO_RUN="{{ item.meta.ansible_playbook }}"
else
  PLAYBOOK_TO_RUN="temp_{{ item.meta.ansible_playbook }}"
  echo -e "---\n- import_playbook: collections/ansible_collections/tvartom/serveradmin/playbooks/{{ item.meta.ansible_playbook }}" \
      | sudo -u {{ serveradmin.process_user }} tee "{{ serveradmin.path }}/repos/serveradmin/$PLAYBOOK_TO_RUN" > /dev/null
fi


{% if agent_forwarding %}
# https://unix.stackexchange.com/questions/131596/ssh-agent-forwarding-works-but-what-about-sudo-u-username-no-shell-permission
# https://linux.die.net/man/1/setfacl
setfacl -R -m u:{{ serveradmin.process_user }}:rwx "${SSH_AUTH_SOCK%/*}" && echo -e "${Yellow}INFO: Agentforwarding tillgänglig för användare {{ serveradmin.process_user }}.${NC}" || echo -e "${Red}VARNING: Agentforwardning måste vara påslaget för SSH till annan server.${NC}" 
{% endif %}

{% if item.meta.run_as_serveradmin | d(true) %}
sudo -u {{ serveradmin.process_user }} -i {% if agent_forwarding %}SSH_AUTH_SOCK="$SSH_AUTH_SOCK" {% endif %}ansiblerunner_helper.sh $(whoami) "$PLAYBOOK_TO_RUN"
{% else %}
ansiblerunner_helper.sh $(whoami) "$PLAYBOOK_TO_RUN"
{% endif %}

{% if agent_forwarding %}
setfacl -R -b "${SSH_AUTH_SOCK%/*}"
{% endif %}
