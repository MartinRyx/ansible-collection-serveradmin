---

- name: Copy files
  become: yes
  become_user: "{{ webinstance.process_user }}"
  #rsync:
  #-a, --archive               archive mode; equals -rlptgoD (no -H,-A,-X)
  #  -r, --recursive             recurse into directories
  #  -l, --links                 copy symlinks as symlinks
  #  -p, --perms                 preserve permissions
  #  -t, --times                 preserve modification times
  #  -g, --group                 preserve group
  #  -o, --owner                 preserve owner (super-user only)
  #  -D                          same as --devices --specials
  #    --devices               preserve device files (super-user only)
  #    --specials              preserve special files
  
  #  -H, --hard-links     This tells rsync to look for hard-linked files in the transfer and link together the corresponding files on the receiving side. Without this option, hard-linked files in the transfer are treated as though they were separate files.
  #  -A, --acls           This option causes rsync to update the destination ACLs to be the same as the source ACLs. The option also implies --perms.
  #  -X, --xattrs         This option causes rsync to update the remote extended attributes to be the same as the local ones.
  
  #-v, --verbose
  #-z, --compress              compress file data during the transfer
  
  shell: "rsync -a \"{{ webinstance.path }}/{{ deploy.source_dir }}\"/ \"{{ deploy_facts[repo.name].source }}\""
  args:
    chdir: "{{ webinstance.path }}/repos/{{ repo.name }}"
