---
# Exempel på användning av denna task:
#
#- name: Registrera nyckel för Google Cloud på aktuell användare
#  include_role:
#    name: google_cloud_sdk
#    tasks_from: gcloud_add_key
#  vars:
#    gcloud_linuxuser: "{{ serveradmin.process_user }}"   #Användaren som nyckeln ska registreras på
#    gloud_key: "{{ gcloud_key }}"                   #Sträng med nyckel i json-format


# Nyckel skapas på webben:
# https://console.cloud.google.com/iam-admin/serviceaccounts
#
# Spara som gcloud_key in /root/host_vars.yml
#
# Nyckel spara i linux per användare
#

- name: Kolla om credentials finns
  become: yes
  become_user: "{{ gcloud_linuxuser }}"
  command: gcloud auth list
  register: gcloud_auth_list_result
  changed_when: false

- set_fact:
    gcloud_add_key: "{{ not gcloud_auth_list_result.stdout is search(gcloud_key | from_json | json_query('client_email')) }}"

- name: Create temporary file
  become: yes
  become_user: "{{ gcloud_linuxuser }}"
  tempfile:
     state: file
     suffix: .json
  when: gcloud_add_key|bool
  register: __gcloud_temp_key

- name: Copy temp file
  become: yes
  become_user: "{{ gcloud_linuxuser }}"
  copy:
    content: '{{ gcloud_key }}'
    dest: '{{ __gcloud_temp_key.path }}'
  when: gcloud_add_key|bool

- name: Activate service account
  become: yes
  become_user: "{{ gcloud_linuxuser }}"
  command: "gcloud auth activate-service-account {{ gcloud_key | from_json | json_query('client_email') }} --key-file={{ __gcloud_temp_key.path }} --project={{ gcloud_key | from_json | json_query('project_id') }}"
  when: gcloud_add_key|bool

- name: Remove gcloud servicekey
  become: yes
  become_user: "{{ gcloud_linuxuser }}"
  file:
    path: "{{ __gcloud_temp_key.path }}"
    state: absent
  when: gcloud_add_key|bool


- name: Ta reda på huvudgruppen för användaren
  command: id -gn
  become: yes
  become_user: "{{ gcloud_linuxuser }}"
  register: gcloud_linuxgroup_result
  changed_when: false

- name: "Slå på gcloud som helper till git"
  become: yes
  ini_file:
    path: "~{{ gcloud_linuxuser }}/.gitconfig"
    section: 'credential "https://source.developers.google.com"'
    option: "helper"
    value: "gcloud.sh"
    owner: "{{ gcloud_linuxuser }}"
    group: "{{ gcloud_linuxgroup_result.stdout }}"
    mode: "u=rw,g=rw,o=r"
  when: serveradmin.use_gcloud

